/*
 * generated by Xtext
 */
grammar InternalSchooldsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.ps3.school.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.ps3.school.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.ps3.school.services.SchooldslGrammarAccess;

}

@parser::members {

 	private SchooldslGrammarAccess grammarAccess;
 	
    public InternalSchooldslParser(TokenStream input, SchooldslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SchoolDatabase";	
   	}
   	
   	@Override
   	protected SchooldslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSchoolDatabase
entryRuleSchoolDatabase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchoolDatabaseRule()); }
	 iv_ruleSchoolDatabase=ruleSchoolDatabase 
	 { $current=$iv_ruleSchoolDatabase.current; } 
	 EOF 
;

// Rule SchoolDatabase
ruleSchoolDatabase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SchoolDatabase' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSchoolDatabaseAccess().getSchoolDatabaseKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSchoolDatabaseAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='school' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSchoolDatabaseAccess().getSchoolKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolDatabaseAccess().getSchoolSchoolParserRuleCall_3_0()); 
	    }
		lv_school_3_0=ruleSchool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolDatabaseRule());
	        }
       		set(
       			$current, 
       			"school",
        		lv_school_3_0, 
        		"School");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='queries' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSchoolDatabaseAccess().getQueriesKeyword_4_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSchoolDatabaseAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolDatabaseAccess().getQueryQueryParserRuleCall_4_2_0()); 
	    }
		lv_query_6_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolDatabaseRule());
	        }
       		add(
       			$current, 
       			"query",
        		lv_query_6_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSchoolDatabaseAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolDatabaseAccess().getQueryQueryParserRuleCall_4_3_1_0()); 
	    }
		lv_query_8_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolDatabaseRule());
	        }
       		add(
       			$current, 
       			"query",
        		lv_query_8_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSchoolDatabaseAccess().getRightCurlyBracketKeyword_4_4());
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSchoolDatabaseAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSchool
entryRuleSchool returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchoolRule()); }
	 iv_ruleSchool=ruleSchool 
	 { $current=$iv_ruleSchool.current; } 
	 EOF 
;

// Rule School
ruleSchool returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSchoolAccess().getSchoolAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='faculties' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSchoolAccess().getFacultiesKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getFacultyFacultyParserRuleCall_3_2_0()); 
	    }
		lv_faculty_5_0=ruleFaculty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"faculty",
        		lv_faculty_5_0, 
        		"Faculty");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSchoolAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getFacultyFacultyParserRuleCall_3_3_1_0()); 
	    }
		lv_faculty_7_0=ruleFaculty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"faculty",
        		lv_faculty_7_0, 
        		"Faculty");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='coursesofstudy' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSchoolAccess().getCoursesofstudyKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getCourseofstudyCourseOfStudyParserRuleCall_4_2_0()); 
	    }
		lv_courseofstudy_11_0=ruleCourseOfStudy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"courseofstudy",
        		lv_courseofstudy_11_0, 
        		"CourseOfStudy");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSchoolAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getCourseofstudyCourseOfStudyParserRuleCall_4_3_1_0()); 
	    }
		lv_courseofstudy_13_0=ruleCourseOfStudy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"courseofstudy",
        		lv_courseofstudy_13_0, 
        		"CourseOfStudy");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_4_4());
    }
)?(	otherlv_15='courses' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSchoolAccess().getCoursesKeyword_5_0());
    }
	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getCourseCourseParserRuleCall_5_2_0()); 
	    }
		lv_course_17_0=ruleCourse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"course",
        		lv_course_17_0, 
        		"Course");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSchoolAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getCourseCourseParserRuleCall_5_3_1_0()); 
	    }
		lv_course_19_0=ruleCourse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"course",
        		lv_course_19_0, 
        		"Course");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_21='students' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSchoolAccess().getStudentsKeyword_6_0());
    }
	otherlv_22='{' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getStudentStudentParserRuleCall_6_2_0()); 
	    }
		lv_student_23_0=ruleStudent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"student",
        		lv_student_23_0, 
        		"Student");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getSchoolAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getStudentStudentParserRuleCall_6_3_1_0()); 
	    }
		lv_student_25_0=ruleStudent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"student",
        		lv_student_25_0, 
        		"Student");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_6_4());
    }
)?(	otherlv_27='teachers' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getSchoolAccess().getTeachersKeyword_7_0());
    }
	otherlv_28='{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getSchoolAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getTeacherTeacherParserRuleCall_7_2_0()); 
	    }
		lv_teacher_29_0=ruleTeacher		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"teacher",
        		lv_teacher_29_0, 
        		"Teacher");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_30=',' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getSchoolAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchoolAccess().getTeacherTeacherParserRuleCall_7_3_1_0()); 
	    }
		lv_teacher_31_0=ruleTeacher		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchoolRule());
	        }
       		add(
       			$current, 
       			"teacher",
        		lv_teacher_31_0, 
        		"Teacher");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_32='}' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_7_4());
    }
)?	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getSchoolAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	 iv_ruleQuery=ruleQuery 
	 { $current=$iv_ruleQuery.current; } 
	 EOF 
;

// Rule Query
ruleQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQueryAccess().getQueryAction_0(),
            $current);
    }
)	otherlv_1='Query' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQueryAccess().getQueryKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryAccess().getTypeSchoolElementEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleSchoolElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"SchoolElement");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='where' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getQueryAccess().getWhereKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryAccess().getWhereWhereParserRuleCall_4_1_0()); 
	    }
		lv_where_5_0=ruleWhere		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryRule());
	        }
       		set(
       			$current, 
       			"where",
        		lv_where_5_0, 
        		"Where");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleFaculty
entryRuleFaculty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacultyRule()); }
	 iv_ruleFaculty=ruleFaculty 
	 { $current=$iv_ruleFaculty.current; } 
	 EOF 
;

// Rule Faculty
ruleFaculty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFacultyAccess().getFacultyAction_0(),
            $current);
    }
)	otherlv_1='Faculty' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFacultyAccess().getFacultyKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFacultyAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacultyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFacultyAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='coursesofstudy' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFacultyAccess().getCoursesofstudyKeyword_4_0());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFacultyAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacultyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFacultyAccess().getCourseofstudyCourseOfStudyCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFacultyAccess().getCommaKeyword_4_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacultyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFacultyAccess().getCourseofstudyCourseOfStudyCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFacultyAccess().getRightParenthesisKeyword_4_4());
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFacultyAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCourseOfStudy
entryRuleCourseOfStudy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCourseOfStudyRule()); }
	 iv_ruleCourseOfStudy=ruleCourseOfStudy 
	 { $current=$iv_ruleCourseOfStudy.current; } 
	 EOF 
;

// Rule CourseOfStudy
ruleCourseOfStudy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CourseOfStudy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCourseOfStudyAccess().getCourseOfStudyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCourseOfStudyAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCourseOfStudyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCourseOfStudyAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='courses' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCourseOfStudyAccess().getCoursesKeyword_3_0());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCourseOfStudyAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseOfStudyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseOfStudyAccess().getCourseCourseCrossReference_3_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCourseOfStudyAccess().getCommaKeyword_3_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseOfStudyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseOfStudyAccess().getCourseCourseCrossReference_3_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCourseOfStudyAccess().getRightParenthesisKeyword_3_4());
    }
)?	otherlv_9='faculty' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCourseOfStudyAccess().getFacultyKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseOfStudyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseOfStudyAccess().getFacultyFacultyCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='students' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCourseOfStudyAccess().getStudentsKeyword_6_0());
    }
	otherlv_12='(' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCourseOfStudyAccess().getLeftParenthesisKeyword_6_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseOfStudyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseOfStudyAccess().getStudentStudentCrossReference_6_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCourseOfStudyAccess().getCommaKeyword_6_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseOfStudyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseOfStudyAccess().getStudentStudentCrossReference_6_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16=')' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCourseOfStudyAccess().getRightParenthesisKeyword_6_4());
    }
)?	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCourseOfStudyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleCourse
entryRuleCourse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCourseRule()); }
	 iv_ruleCourse=ruleCourse 
	 { $current=$iv_ruleCourse.current; } 
	 EOF 
;

// Rule Course
ruleCourse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Course' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCourseAccess().getCourseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCourseAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCourseRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCourseAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='courseNumber' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCourseAccess().getCourseNumberKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCourseAccess().getCourseNumberEStringParserRuleCall_3_1_0()); 
	    }
		lv_courseNumber_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCourseRule());
	        }
       		set(
       			$current, 
       			"courseNumber",
        		lv_courseNumber_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='enrolledStudents' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCourseAccess().getEnrolledStudentsKeyword_4_0());
    }
	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCourseAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseAccess().getEnrolledStudentStudentCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCourseAccess().getCommaKeyword_4_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseAccess().getEnrolledStudentStudentCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCourseAccess().getRightParenthesisKeyword_4_4());
    }
)?	otherlv_11='taughtBy' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCourseAccess().getTaughtByKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseAccess().getTaughtByTeacherCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13='courseresults' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCourseAccess().getCourseresultsKeyword_7_0());
    }
	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCourseAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCourseAccess().getCourseresultCourseResultParserRuleCall_7_2_0()); 
	    }
		lv_courseresult_15_0=ruleCourseResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCourseRule());
	        }
       		add(
       			$current, 
       			"courseresult",
        		lv_courseresult_15_0, 
        		"CourseResult");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCourseAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCourseAccess().getCourseresultCourseResultParserRuleCall_7_3_1_0()); 
	    }
		lv_courseresult_17_0=ruleCourseResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCourseRule());
	        }
       		add(
       			$current, 
       			"courseresult",
        		lv_courseresult_17_0, 
        		"CourseResult");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCourseAccess().getRightCurlyBracketKeyword_7_4());
    }
)?	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getCourseAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleStudent
entryRuleStudent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStudentRule()); }
	 iv_ruleStudent=ruleStudent 
	 { $current=$iv_ruleStudent.current; } 
	 EOF 
;

// Rule Student
ruleStudent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Student' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStudentAccess().getStudentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStudentAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStudentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStudentAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='studentNumber' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStudentAccess().getStudentNumberKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStudentAccess().getStudentNumberEStringParserRuleCall_3_1_0()); 
	    }
		lv_studentNumber_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStudentRule());
	        }
       		set(
       			$current, 
       			"studentNumber",
        		lv_studentNumber_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='enrolledIn' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStudentAccess().getEnrolledInKeyword_4_0());
    }
	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStudentAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStudentAccess().getEnrolledInCourseCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStudentAccess().getCommaKeyword_4_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStudentAccess().getEnrolledInCourseCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStudentAccess().getRightParenthesisKeyword_4_4());
    }
)?	otherlv_11='courseofstudy' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStudentAccess().getCourseofstudyKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStudentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStudentAccess().getCourseofstudyCourseOfStudyCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStudentAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleTeacher
entryRuleTeacher returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTeacherRule()); }
	 iv_ruleTeacher=ruleTeacher 
	 { $current=$iv_ruleTeacher.current; } 
	 EOF 
;

// Rule Teacher
ruleTeacher returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTeacherAccess().getTeacherAction_0(),
            $current);
    }
)	otherlv_1='Teacher' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTeacherAccess().getTeacherKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTeacherAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTeacherRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTeacherAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='teaches' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTeacherAccess().getTeachesKeyword_4_0());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTeacherAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeacherRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTeacherAccess().getTeachesCourseCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTeacherAccess().getCommaKeyword_4_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeacherRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTeacherAccess().getTeachesCourseCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTeacherAccess().getRightParenthesisKeyword_4_4());
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTeacherAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleCourseResult
entryRuleCourseResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCourseResultRule()); }
	 iv_ruleCourseResult=ruleCourseResult 
	 { $current=$iv_ruleCourseResult.current; } 
	 EOF 
;

// Rule CourseResult
ruleCourseResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CourseResult' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCourseResultAccess().getCourseResultKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCourseResultAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='grade' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCourseResultAccess().getGradeKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCourseResultAccess().getGradeEBigIntegerParserRuleCall_2_1_0()); 
	    }
		lv_grade_3_0=ruleEBigInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCourseResultRule());
	        }
       		set(
       			$current, 
       			"grade",
        		lv_grade_3_0, 
        		"EBigInteger");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='student' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCourseResultAccess().getStudentKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCourseResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCourseResultAccess().getStudentStudentCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCourseResultAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEBigInteger
entryRuleEBigInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEBigIntegerRule()); } 
	 iv_ruleEBigInteger=ruleEBigInteger 
	 { $current=$iv_ruleEBigInteger.current.getText(); }  
	 EOF 
;

// Rule EBigInteger
ruleEBigInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBigIntegerAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEBigIntegerAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleWhere
entryRuleWhere returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhereRule()); }
	 iv_ruleWhere=ruleWhere 
	 { $current=$iv_ruleWhere.current; } 
	 EOF 
;

// Rule Where
ruleWhere returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhereAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhereAccess().getBooleanexprBooleanExprParserRuleCall_1_0()); 
	    }
		lv_booleanexpr_1_0=ruleBooleanExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereRule());
	        }
       		set(
       			$current, 
       			"booleanexpr",
        		lv_booleanexpr_1_0, 
        		"BooleanExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhereAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleBooleanExpr
entryRuleBooleanExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanExprRule()); }
	 iv_ruleBooleanExpr=ruleBooleanExpr 
	 { $current=$iv_ruleBooleanExpr.current; } 
	 EOF 
;

// Rule BooleanExpr
ruleBooleanExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanExprAccess().getBooleanExprAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExprAccess().getLhsEStringParserRuleCall_1_0()); 
	    }
		lv_lhs_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExprRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExprAccess().getOperatorEStringParserRuleCall_2_0()); 
	    }
		lv_operator_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExprRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExprAccess().getRhsEStringParserRuleCall_3_0()); 
	    }
		lv_rhs_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExprRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='and' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBooleanExprAccess().getAndKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExprAccess().getAndBooleanExprParserRuleCall_4_1_0()); 
	    }
		lv_and_5_0=ruleBooleanExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExprRule());
	        }
       		set(
       			$current, 
       			"and",
        		lv_and_5_0, 
        		"BooleanExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='or' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBooleanExprAccess().getOrKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanExprAccess().getOrBooleanExprParserRuleCall_5_1_0()); 
	    }
		lv_or_7_0=ruleBooleanExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanExprRule());
	        }
       		set(
       			$current, 
       			"or",
        		lv_or_7_0, 
        		"BooleanExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Rule SchoolElement
ruleSchoolElement returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='School' 
	{
        $current = grammarAccess.getSchoolElementAccess().getSchoolEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSchoolElementAccess().getSchoolEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Student' 
	{
        $current = grammarAccess.getSchoolElementAccess().getStudentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSchoolElementAccess().getStudentEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Teacher' 
	{
        $current = grammarAccess.getSchoolElementAccess().getTeacherEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSchoolElementAccess().getTeacherEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Faculty' 
	{
        $current = grammarAccess.getSchoolElementAccess().getFacultyEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSchoolElementAccess().getFacultyEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='CourseOfStudy' 
	{
        $current = grammarAccess.getSchoolElementAccess().getCourseOfStudyEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getSchoolElementAccess().getCourseOfStudyEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Course' 
	{
        $current = grammarAccess.getSchoolElementAccess().getCourseEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getSchoolElementAccess().getCourseEnumLiteralDeclaration_5()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


